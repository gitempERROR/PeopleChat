// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PeopleChat8.Models;

#nullable disable

namespace PeopleChat8.Migrations
{
    [DbContext(typeof(PeopleChatContext))]
    partial class PeopleChatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PeopleChat8.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_login");

                    b.Property<byte[]>("UserPassword")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("user_password");

                    b.HasKey("Id")
                        .HasName("auth_pkey");

                    b.HasIndex("RoleId");

                    b.ToTable("auth", (string)null);
                });

            modelBuilder.Entity("PeopleChat8.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender_name");

                    b.HasKey("Id")
                        .HasName("genders_pkey");

                    b.ToTable("genders", (string)null);
                });

            modelBuilder.Entity("PeopleChat8.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceaverId")
                        .HasColumnType("integer")
                        .HasColumnName("receaver_id");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer")
                        .HasColumnName("sender_id");

                    b.HasKey("Id")
                        .HasName("messages_pkey");

                    b.HasIndex("ReceaverId");

                    b.HasIndex("SenderId");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("PeopleChat8.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("roles_pkey");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("PeopleChat8.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthId")
                        .HasColumnType("integer")
                        .HasColumnName("auth_id");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<int?>("GenderId")
                        .HasColumnType("integer")
                        .HasColumnName("gender_id");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<string>("UserFirstname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_firstname");

                    b.Property<string>("UserLastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_lastname");

                    b.HasKey("Id")
                        .HasName("users_pkey");

                    b.HasIndex("AuthId");

                    b.HasIndex("GenderId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("PeopleChat8.Models.Auth", b =>
                {
                    b.HasOne("PeopleChat8.Models.Role", "Role")
                        .WithMany("Auths")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("auth_role_id_fkey");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PeopleChat8.Models.Message", b =>
                {
                    b.HasOne("PeopleChat8.Models.User", "Receaver")
                        .WithMany("MessageReceavers")
                        .HasForeignKey("ReceaverId")
                        .IsRequired()
                        .HasConstraintName("messages_receaver_id_fkey");

                    b.HasOne("PeopleChat8.Models.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("messages_sender_id_fkey");

                    b.Navigation("Receaver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PeopleChat8.Models.User", b =>
                {
                    b.HasOne("PeopleChat8.Models.Auth", "Auth")
                        .WithMany("Users")
                        .HasForeignKey("AuthId")
                        .HasConstraintName("users_auth_id_fkey");

                    b.HasOne("PeopleChat8.Models.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("users_gender_id_fkey");

                    b.Navigation("Auth");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("PeopleChat8.Models.Auth", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PeopleChat8.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PeopleChat8.Models.Role", b =>
                {
                    b.Navigation("Auths");
                });

            modelBuilder.Entity("PeopleChat8.Models.User", b =>
                {
                    b.Navigation("MessageReceavers");

                    b.Navigation("MessageSenders");
                });
#pragma warning restore 612, 618
        }
    }
}
